/* 266B. Очередь в школе - (https://codeforces.com/problemset/problem/266/B)
1) ограничение по времени на тест 2 секунды
2) ограничение по памяти на тест 256 мегабайт
3) ввод стандартный ввод
4) вывод стандартный вывод
*/

/* На перемене в школьной столовой образовалась очередь из n человек, в которой стоят мальчики и девочки. Изначально ребята встали в таком порядке, 
в котором они забежали в столовую. Однако через некоторое время мальчикам стало неловко, что они стоят в очереди перед девочками, 
и они стали каждую секунду пропускать девочек вперед.

Опишем процесс более точно. Пусть позиции в очереди последовательно пронумерованы целыми числами от 1 до n, причем тот, кто стоит на позиции номер 1 обслуживается первым. 
Тогда, если в момент времени x на i-ой позиции стоит мальчик, а на (i + 1)-ой — девочка, то в момент времени x + 1 на i-ой позиции будет находиться девочка,
а на (i + 1)-ой — мальчик. Моменты времени заданы в секундах.

Вам задано расположение ребят в начальный момент времени, определите, как будет выглядеть очередь через t секунд.
*/

/*
 Входные данные
В первой строке заданы два целых числа n и t (1 ≤ n, t ≤ 50), обозначающие количество ребят в очереди и время, спустя которое требуется определить, как будет выглядеть очередь.

В следующей строке задана строка s, обозначающая начальную расстановку школьников. Если на i-ой позиции в очереди стоит мальчик, то i-ый символ строки s равен «B», 
иначе i-ый символ равен «G».

Выходные данные
Выведите строку a, обозначающую расположение ребят в очереди спустя t секунд. Если на i-ой позиции через заданное время будет стоять мальчик, 
то i-ый символ a должен быть равен «B», иначе он должен быть равен «G».
*/

/* Примеры:
Входные данные:
5 1
BGGBG
Выходные данные:
GBGGB

Входные данные:
5 2
BGGBG
Выходные данные:
GGBGB

Входные данные:
4 1
GGGB
Выходные данные:
GGGB
*/

#include <iostream>
using std::cin;
using std::cout;
using std::string;
 
int main() {
	int n, t,j=1;
	string s;
	cin >> n >> t >> s;
	while (j <= t) {
		for(int i = 0; i<s.size();i++){
			if (s[i] == 'B' && s[i + 1] == 'G') {
				s[i] = 'G';
				s[i + 1] = 'B';
				i++;
			}
		}
		j++;
	}
	cout << s;
 
	return 0;
}
