/* 263A. Красивая матрица - (https://codeforces.com/problemset/problem/263/A)
1) ограничение по времени на тест2 секунды
2) ограничение по памяти на тест256 мегабайт
3) вводстандартный ввод
4) выводстандартный вывод
*/

/* Перед Вами матрица размера 5 × 5, состоящая из 24-x нулей и единственной единицы. Строки матрицы пронумеруем числами от 1 до 5 сверху вниз, 
столбцы матрицы пронумеруем числами от 1 до 5 слева направо. За один ход разрешается применить к матрице одно из двух следующих преобразований:

1) Поменять местами две соседние строки матрицы, то есть строки с номерами i и i + 1 для некоторого целого i (1 ≤ i < 5).

2) Поменять местами два соседних столбца матрицы, то есть столбцы с номерами j и j + 1 для некоторого целого j (1 ≤ j < 5).

Вы считаете, что матрица будет выглядеть красиво, если единственная единица этой матрицы будет находиться в ее центре (в клетке, которая находится на пересечении третьей строки 
и третьего столбца). Посчитайте, какое минимальное количество ходов потребуется, чтобы сделать матрицу красивой.
*/

/*
Входные данные
Входные данные состоят из пяти строк, в каждой из которых записаны пять целых чисел: j-ое число в i-ой строке входных данных обозначает элемент матрицы, стоящий на пересечении i-ой строки и j-ого столбца. Гарантируется, что матрица состоит из 24-x нулей и единственной единицы.

Выходные данные
Выведите единственное целое число — минимальное количество действий, которое требуется, чтобы сделать матрицу красивой.
*/

/* Примеры:

Входные данные:
0 0 0 0 0
0 0 0 0 1
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
Выходные данные:
3

Входные данные:
0 0 0 0 0
0 0 0 0 0
0 1 0 0 0
0 0 0 0 0
0 0 0 0 0
Выходные данные:
1
*/

#include <iostream>
#include<algorithm>
using std::cin;
using std::cout;
 
int main(){
    int r=0,n;
    for (int i = 0; i < 5; i++) {
        for (int j = 0; j < 5; j++) {
            cin >> n;
            if (n) {
                r = abs(i - 2) + abs(j - 2);
            }
        }
    } 
    cout << r;
    return 0;
}
