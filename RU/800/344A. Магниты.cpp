/* 344A. Магниты - (https://codeforces.com/problemset/problem/344/A)
1) ограничение по времени на тест 1 секунла
2) ограничение по памяти на тест 256  мегабайт
3) ввод стандартный ввод
4) вывод стандартный вывод
*/

/*
Безумный ученый Майк развлекается, составляя ряды домино. 
В качестве домино Майк использует прямоугольные магниты с полюсами «плюс» и «минус». Если друг к другу приблизить два магнита, то одноименные полюса отталкиваются, 
а разноименные полюса притягиваются.
Майк начинает с того, что горизонтально кладет на стол один магнит. На каждом следующем шаге Майк продолжает ряд справа, 
приставляя еще один магнит горизонтально. В зависимости от того, как Майк положил магнит на стол, тот либо притягивается к предыдущему 
(тогда образуется «островок» из нескольких магнитов вместе), либо отталкивается от предыдущего (тогда Майк кладет новый магнит на некотором расстоянии справа от предыдущего). 
Считается, что магнит, лежащий отдельно от других, тоже образует свой «островок».
Майк выложил в ряд несколько магнитов. Определите, сколько «островков» получилось в ряду.
*/

/*
Входные данные
Первая строка входных данных содержит целое число n (1 ≤ n ≤ 100000) — количество магнитов. Далее следуют n строк: i-я строка (1 ≤ i ≤ n) содержит символы «01», 
если Майк положил i-ый по порядку магнит в положении «плюс-минус», и символы «10», если Майк положил этот магнит в положении «минус-плюс».
Выходные данные
В единственной строке выходных данных выведите количество «островков», получившихся в ряду.
*/

/* Примеры:
Входные данные:
6
10
10
10
01
10
10
Выходные данные:
3

Входные данные:
4
01
01
10
10
Выходные данные:
2

Примечание:
Первый тест соответствует рисунку. В этом тесте три «островка» размером три, один и два магнита.
Во втором тесте два «островка» по два магнита.
*/

    #include <iostream>
     
    using namespace std;
     
    int main()
    {
       int n, r = 0;
       cin >> n;
       int *arr = new int[n];
       for (int i = 1; i <= n; i++)
       {
          cin >> arr[i];
          if (arr[i - 1] != arr[i])
          {
             r++;
          }
       }
     
       cout << r;
       delete[] arr;
     
       return 0;
    }
